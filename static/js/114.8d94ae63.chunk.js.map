{"version":3,"sources":["webpack://open-house-wordle/./src/components/Game.css?2879","haversine.js","components/Game.jsx"],"names":[],"mappings":"wKACA,MAAe,CAAC,E,mGCOhB,EAAe,CAAC,CAAC,EAAM,GAAO,CAAC,EAAM,GAAO,EAAU,KAAU,CAC/D,KAAM,GAAW,GAAU,KAAK,GAAK,IAAO,EACtC,EAAW,CAAC,EAAG,IAAO,KAAK,GAAK,IAAQ,GAAI,GAG5C,EAAO,EAAS,EAAM,CAAI,EAC1B,EAAO,EAAS,EAAM,CAAI,EAEhC,EAAO,EAAS,CAAI,EACpB,EAAO,EAAS,CAAI,EAGpB,KAAM,GACL,KAAK,IAAI,KAAK,IAAI,EAAO,CAAC,EAAG,CAAC,EAC5B,KAAK,IAAI,KAAK,IAAI,EAAO,CAAC,EAAG,CAAC,EAAI,KAAK,IAAI,CAAI,EAAI,KAAK,IAAI,CAAI,EAC7D,EAAI,EAAI,KAAK,KAAK,KAAK,KAAK,CAAC,CAAC,EAEpC,GAAI,GAAgB,KAAwB,EAE5C,MAAI,IACH,IAAiB,SAGX,CACR,E,+KCrBe,MAAM,SAAa,YAAU,CAC3C,YAAY,EAAO,CAClB,MAAM,CAAK,EASZ,2BAAoB,IAAM,CACzB,QAAQ,IAAI,uBAAuB,CACpC,CAAC,EAED,qBAAc,IAAM,CACnB,KAAM,GAAQ,KAAK,MAAM,MACnB,EAAc,KAAK,MAAM,QACzB,EAAe,KAAK,MAAM,MAChC,GAAI,GAEJ,GAAI,IAAU,EAAa,KAC1B,EAAa,CAAC,GAAG,EAAa,CAAE,QAAO,QAAS,qCAAwC,SAAU,IAAK,CAAC,EACxG,SAAU,CACT,UAAW,mBACX,KAAM;AAAA;AAAA,MAGN,KAAM,UACN,kBAAmB,YACpB,CAAC,EAAE,KAAK,CAAC,CAAE,iBAAkB,CACxB,GAAa,SAAS,OAAO,CAClC,CAAC,UAEO,IAAU,EAAa,KAAM,CAErC,KAAM,GAAQ,SAAY,GAAS,EAAM,OAAS,CAAK,EACjD,EAAW,KAAK,MAAM,EAC3B,CAAC,EAAa,IAAK,EAAa,IAAI,EACpC,CAAC,EAAM,IAAK,EAAM,IAAI,CACvB,EAAI,GAAI,EACR,EAAa,CAAC,GAAG,EAAa,CAAE,QAAO,QAAS,2BAA8B,SAAU,GAAG,IAAY,CAAC,EACpG,EAAW,QAAU,EACxB,SAAU,CACT,UAAW,UACX,KAAM;AAAA;AAAA,gCAEqB,EAAa;AAAA,OAExC,KAAM,QACN,kBAAmB,YACpB,CAAC,EAAE,KAAK,CAAC,CAAE,iBAAkB,CACxB,GAAa,SAAS,OAAO,CAClC,CAAC,EAGD,SAAU,CACT,UAAW,UACX,KAAM;AAAA;AAAA,OAGN,KAAM,QACN,kBAAmB,WACpB,CAAC,CAEH,CACA,KAAK,SAAS,CAAE,QAAS,CAAW,CAAC,CACtC,CAAC,EAhEA,KAAK,OAAS,IACd,KAAK,MAAQ,CACZ,MAAO,GACP,UAAS,IACT,QAAS,CAAC,CACX,CACD,CA4DA,QAAS,CACR,MACC,iBAAC,IAAS,CAAC,MAAO,CACjB,cAAe,MAChB,GACC,gBAAC,MAAG,UAAU,UAAS,mBAAiB,EACxC,gBAAC,OAAI,UAAU,UACd,gBAAC,UAAO,IAAK,KAAK,MAAM,MAAM,IAAK,EACnC,gBAAC,IAAQ,CACR,YAAY,gBACZ,MAAK,GAAC,OAAM,GAAC,UAAS,GAAC,QAAS,KAAK,OACrC,SAAW,GAAM,CAChB,KAAK,SAAS,CAAE,MAAO,EAAE,OAAO,SAAU,CAAC,CAC5C,EACD,EACA,gBAAC,IAAM,CAAC,UAAU,mBAAmB,MAAM,OAAO,MAAK,GAAC,QAAS,KAAK,aACrE,gBAAC,OAAI,IAAI,YACR,IAAI,+CACJ,UAAU,QACX,EAAE,eAEH,EACA,gBAAC,IAAK,CAAC,WAAU,IAChB,gBAAC,gBACA,gBAAC,aACA,gBAAC,oBAAiB,OAAK,EACvB,gBAAC,oBAAiB,gBAAC,IAAI,CAAC,KAAK,YAAY,UAAU,QAAQ,EAAE,IAAC,gBAAC,IAAI,CAAC,UAAU,MAAM,KAAK,IAAI,CAAE,EAC/F,gBAAC,oBAAiB,mCAAgC,gBAAC,IAAI,CAAC,UAAU,MAAM,KAAK,IAAI,EAAE,GAAC,CACrF,CACD,EACA,gBAAC,cAEC,KAAK,MAAM,QAAQ,IAAK,GAEtB,gBAAC,SAAU,IAAK,EAAM,OACrB,gBAAC,cAAY,EAAM,KAAM,EACzB,gBAAC,cAAW,gBAAC,QAAK,wBAAyB,CAAE,OAAQ,EAAM,OAAQ,EAAG,CAAO,EAC7E,gBAAC,cAAY,EAAM,QAAS,CAC7B,CAED,CAEH,EACA,gBAAC,gBACA,gBAAC,aACA,gBAAC,gBAAiB,QAAQ,KAAK,EAAI,KAAK,MAAM,QAAQ,OAAO,iBAAe,CAC7E,CACD,CACD,CACD,CACD,CAEF,CACD,CAEA,EAAK,UAAY,CAChB,MAAO,qBACR,C","file":"static/js/114.8d94ae63.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","/**\n* Calculates the haversine distance between point A, and B.\n* @param {number[]} latlngA [lat, lng] point A\n* @param {number[]} latlngB [lat, lng] point B\n* @param {boolean} [isMiles=false] whether to use miles or km\n* @return {number} distance between A and B\n*/\n\nexport default ([lat1, lon1], [lat2, lon2], isMiles = false) => {\n\tconst toRadian = angle => (Math.PI / 180) * angle;\n\tconst distance = (a, b) => (Math.PI / 180) * (a - b);\n\tconst RADIUS_OF_EARTH_IN_KM = 6371;\n\n\tconst dLat = distance(lat2, lat1);\n\tconst dLon = distance(lon2, lon1);\n\n\tlat1 = toRadian(lat1);\n\tlat2 = toRadian(lat2);\n\n\t// Haversine Formula\n\tconst a =\n\t\tMath.pow(Math.sin(dLat / 2), 2) +\n    Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n\tconst c = 2 * Math.asin(Math.sqrt(a));\n\n\tlet finalDistance = RADIUS_OF_EARTH_IN_KM * c;\n\n\tif (isMiles) {\n\t\tfinalDistance /= 1.60934;\n\t}\n\n\treturn finalDistance;\n};","import './Game.css';\nimport React, { Component } from 'react';\nimport placeList from '../placeList';\nimport PropTypes from 'prop-types';\nimport { Container, Button, Dropdown, Table, Icon } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport places from '../placeList';\nimport haversine from '../haversine';\nimport Swal from 'sweetalert2';\n\n\nexport default class Game extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.places = places;\n\t\tthis.state = {\n\t\t\tguess: '',\n\t\t\tplaceList,\n\t\t\tguesses: [],\n\t\t};\n\t}\n\n\tcomponentDidMount = () => {\n\t\tconsole.log('Game component loaded');\n\t};\n\n\thandleGuess = () => {\n\t\tconst guess = this.state.guess;\n\t\tconst prevGuesses = this.state.guesses;\n\t\tconst correctPlace = this.props.place;\n\t\tlet newGuesses;\n\n\t\tif (guess === correctPlace.text) {\n\t\t\tnewGuesses = [...prevGuesses, { guess, correct: '<i class=\\'icon checkmark green\\' />', distance: '0m' }];\n\t\t\tSwal.fire({\n\t\t\t\ttitleText: 'Congratulations!',\n\t\t\t\thtml: `\n\t\t\t\t\t<p>You guessed the place correctly!</p>\n\t\t\t\t`,\n\t\t\t\ticon: 'success',\n\t\t\t\tconfirmButtonText: 'Play Again',\n\t\t\t}).then(({ isConfirmed }) => {\n\t\t\t\tif (isConfirmed) location.reload();\n\t\t\t});\n\t\t}\n\t\telse if (guess !== correctPlace.text) {\n\t\t\t// eslint-disable-next-line no-shadow\n\t\t\tconst place = places.find(place => place.text === guess);\n\t\t\tconst distance = Math.round(haversine(\n\t\t\t\t[correctPlace.lat, correctPlace.long],\n\t\t\t\t[place.lat, place.long],\n\t\t\t) * 1000);\n\t\t\tnewGuesses = [...prevGuesses, { guess, correct: '<i class=\\'icon x red\\' />', distance: `${distance}m` }];\n\t\t\tif (newGuesses.length >= 4) {\n\t\t\t\tSwal.fire({\n\t\t\t\t\ttitleText: 'Oops...',\n\t\t\t\t\thtml: `\n\t\t\t\t\t\t<p>You guessed the place incorrectly!</p>\n\t\t\t\t\t\t<p>The correct place is ${correctPlace.text}</p>\n\t\t\t\t\t`,\n\t\t\t\t\ticon: 'error',\n\t\t\t\t\tconfirmButtonText: 'Play Again',\n\t\t\t\t}).then(({ isConfirmed }) => {\n\t\t\t\t\tif (isConfirmed) location.reload();\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tSwal.fire({\n\t\t\t\t\ttitleText: 'Oops...',\n\t\t\t\t\thtml: `\n\t\t\t\t\t\t<p>You guessed the place incorrectly!</p>\n\t\t\t\t\t`,\n\t\t\t\t\ticon: 'error',\n\t\t\t\t\tconfirmButtonText: 'Try Again',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tthis.setState({ guesses: newGuesses });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Container style={{\n\t\t\t\tpaddingBottom: '70px',\n\t\t\t}}>\n\t\t\t\t<h2 className='center'>Guess this place:</h2>\n\t\t\t\t<div className='center'>\n\t\t\t\t\t<iframe src={this.props.place.url} />\n\t\t\t\t\t<Dropdown\n\t\t\t\t\t\tplaceholder='Guess a place'\n\t\t\t\t\t\tfluid search selection options={this.places}\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tthis.setState({ guess: e.target.innerText });\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button className='center toppadded' color='blue' fluid onClick={this.handleGuess}>\n\t\t\t\t\t\t<img alt=\"🌍\"\n\t\t\t\t\t\t\tsrc=\"https://twemoji.maxcdn.com/2/72x72/1f30d.png\"\n\t\t\t\t\t\t\tclassName=\"globe\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t&nbsp;&nbsp;Guess\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Table singleLine>\n\t\t\t\t\t\t<Table.Header>\n\t\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t\t<Table.HeaderCell>Guess</Table.HeaderCell>\n\t\t\t\t\t\t\t\t<Table.HeaderCell><Icon name='checkmark' className='green' />/<Icon className='red' name='x' /></Table.HeaderCell>\n\t\t\t\t\t\t\t\t<Table.HeaderCell>Distance from correct place (if <Icon className='red' name='x' />)</Table.HeaderCell>\n\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t</Table.Header>\n\t\t\t\t\t\t<Table.Body>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.state.guesses.map((guess) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Table.Row key={guess.guess}>\n\t\t\t\t\t\t\t\t\t\t\t<Table.Cell>{guess.guess}</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t<Table.Cell><span dangerouslySetInnerHTML={{ __html: guess.correct }}></span></Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t<Table.Cell>{guess.distance}</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Table.Body>\n\t\t\t\t\t\t<Table.Footer>\n\t\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t\t<Table.HeaderCell colSpan='3'>{4 - this.state.guesses.length}/4 guesses left</Table.HeaderCell>\n\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t</Table.Footer>\n\t\t\t\t\t</Table>\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nGame.propTypes = {\n\tplace: PropTypes.object.isRequired,\n};"],"sourceRoot":""}